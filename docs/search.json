[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 allofus authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/pkgdown_only/data-browser.html","id":"using-the-allofus-data-browser-and-r-together","dir":"Articles > Pkgdown_only","previous_headings":"","what":"Using the AllofUs data browser and R together","title":"Using the Data Browser and AllofUs Database","text":"vignette go use AllofUs Research Data Browser identify questions interest, pull data OMOP-CDM structured database. Data Browser useful took quickly finding data (survey questions, conditions electronic health record, fitbit measurements etc.). can found : https://databrowser.researchallofus.org/ available publicly. However, ’s always clear exactly query OMOP-CDM database find data can preview Data Browser. Later Edit: Nearly key information need find survey data can found : https://support.researchallofus.org/hc/en-us/articles/6085114880148.","code":""},{"path":[]},{"path":"/articles/pkgdown_only/data-browser.html","id":"the-basics","dir":"Articles > Pkgdown_only","previous_headings":"Using the AllofUs data browser and R together > Survey Data","what":"The Basics","title":"Using the Data Browser and AllofUs Database","text":"Finding question “country born?” participants answers  can see image “Concept Code” Birthplace USA 1586136. Non-Standard AllofUs specific code used identify Birthplace: USA. need find code question. easy way search code Athena (https://athena.ohdsi.org/search-terms/start).  Clicking Birthplace:USA reveals Observation Domain, question Answer, PPI Vocabulary (vocabulary AllofUs specific, non-standard codes). also see PPI Parent Code 1586135 “Basics: Birthplace”. non-standard code question. can also see non-standard Standard map (OMOP) Birthlace code 3005917. Standard code “Birthplace”.  successful finding AllofUs Data Data Browswer, really important understand difference non-standard standard codes. non-standard codes specific AllofUs database. Standard codes codes found OMOP database. non-standard codes found **{table}_source_concept_id** columns. standard codes found **{table}_concept_id** columns Lets look survey question example. can find question, non-standard code 1586135 observation table. AllofUs specific code Basics: Birthplace question observation_source_concept_id column. ’s glimpse distinct responses code (note ’ve omitted important columns like person_id observation_date shown aggregate row comply AllofUs data sharing restrictions). columns match values saw Athena. can see standard concept ID Birthplace question observation_concept_id column. observation_source_value observation_source_concept_id columns hold related non-standard codes question. Finally, see survey responses : non-standard concept code saw data browser value_source_concept_id column text version code value_source_value.","code":"# start by loading R packages library(allofus)  # You can also use library(tidyverse) to load all of these at once library(dplyr) library(tidyr) library(tibble)  con <- allofus::aou_connect() dplyr::tbl(con, \"observation\") %>%     dplyr::filter(observation_source_concept_id == 1586135) %>%     head() %>%      dplyr::distinct(observation_concept_id, observation_source_value,            observation_source_concept_id, value_source_concept_id, value_source_value) %>%     dplyr::collect()"},{"path":[]},{"path":"/articles/web_only/data-browser.html","id":"using-the-allofus-data-browser-and-r-together","dir":"Articles > Web_only","previous_headings":"","what":"Using the AllofUs data browser and R together","title":"Using the Data Browser and AllofUs Database","text":"vignette go use AllofUs Research Data Browser identify questions interest, pull data OMOP-CDM structured database. Data Browser useful took quickly finding data (survey questions, conditions electronic health record, fitbit measurements etc.). can found : https://databrowser.researchallofus.org/ available publicly. However, ’s always clear exactly query OMOP-CDM database find data can preview Data Browser. Later Edit: Nearly key information need find survey data can found : https://support.researchallofus.org/hc/en-us/articles/6085114880148.","code":""},{"path":[]},{"path":"/articles/web_only/data-browser.html","id":"the-basics","dir":"Articles > Web_only","previous_headings":"Using the AllofUs data browser and R together > Survey Data","what":"The Basics","title":"Using the Data Browser and AllofUs Database","text":"Finding question “country born?” participants answers  can see image “Concept Code” Birthplace USA 1586136. Non-Standard AllofUs specific code used identify Birthplace: USA. need find code question. easy way search code Athena (https://athena.ohdsi.org/search-terms/start).  Clicking Birthplace:USA reveals Observation Domain, question Answer, PPI Vocabulary (vocabulary AllofUs specific, non-standard codes). also see PPI Parent Code 1586135 “Basics: Birthplace”. non-standard code question. can also see non-standard Standard map (OMOP) Birthlace code 3005917. Standard code “Birthplace”.  successful finding AllofUs Data Data Browswer, really important understand difference non-standard standard codes. non-standard codes specific AllofUs database. Standard codes codes found OMOP database. non-standard codes found **{table}_source_concept_id** columns. standard codes found **{table}_concept_id** columns Lets look survey question example. can find question, non-standard code 1586135 observation table. AllofUs specific code Basics: Birthplace question observation_source_concept_id column. ’s glimpse distinct responses code (note ’ve omitted important columns like person_id observation_date shown aggregate row comply AllofUs data sharing restrictions). columns match values saw Athena. can see standard concept ID Birthplace question observation_concept_id column. observation_source_value observation_source_concept_id columns hold related non-standard codes question. Finally, see survey responses : non-standard concept code saw data browser value_source_concept_id column text version code value_source_value.","code":"# start by loading R packages library(allofus)  # You can also use library(tidyverse) to load all of these at once library(dplyr) library(tidyr) library(tibble)  con <- allofus::aou_connect() dplyr::tbl(con, \"observation\") %>%     dplyr::filter(observation_source_concept_id == 1586135) %>%     head() %>%      dplyr::distinct(observation_concept_id, observation_source_value,            observation_source_concept_id, value_source_concept_id, value_source_value) %>%     dplyr::collect()"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Louisa Smith. Author, copyright holder. Rob Cavanaugh. Author, maintainer, copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith L, Cavanaugh R (2023). allofus: Tools AllofUs Resarcher Workbench. https://roux-ohdsi.github.io/allofus/, https://github.com/roux-ohdsi/allofus.","code":"@Manual{,   title = {allofus: Tools for the AllofUs Resarcher Workbench},   author = {Louisa Smith and Rob Cavanaugh},   year = {2023},   note = {https://roux-ohdsi.github.io/allofus/, https://github.com/roux-ohdsi/allofus}, }"},{"path":"/index.html","id":"allofus-r-package","dir":"","previous_headings":"","what":"Tools for the AllofUs Resarcher Workbench ","title":"Tools for the AllofUs Resarcher Workbench ","text":"goal allofus R package streamline use R within AllofUs Researcher Workbench. allofus R package affiliated endorsed Us Research Program. allofus package helps researchers query database build transparent reproducible analysed pipeline. package allows researchers easily use database packages, dbplyr DBI, AllofUs database. package also includes functions help researchers manage storage workspace bucket, well take advantage tools developed OMOP CDM data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for the AllofUs Resarcher Workbench ","text":"","code":"install.packages(\"remotes\") remotes::install_github(\"roux-ohdsi/allofus\")"},{"path":"/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Tools for the AllofUs Resarcher Workbench ","text":"Use aou_connect() establish database connection. connection object DBI connection object, can use packages use DBI connections, dbplyr. example, can use tbl() dplyr access person table Us database: can use dplyr functions table: join table tables database: aou_join() function wrapper around dplyr::left_join() allows join tables easily:","code":"library(allofus) con <- aou_connect() person <- tbl(con, \"person\") person |>    filter(gender_concept_id == 8507) person |>    left_join(tbl(con, \"observation\"), by = \"person_id\") person |>    aou_join(\"observation\", type = \"left\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for the AllofUs Resarcher Workbench ","text":"Suppose want create cohort Us participants experienced stroke. couple ways go .","code":""},{"path":"/index.html","id":"using-the-observation-table","dir":"","previous_headings":"Example","what":"Using the observation table","title":"Tools for the AllofUs Resarcher Workbench ","text":"following code start query first survey date AllofUs survey “Basics” (sometimes, rarely, participants completed survey multiple dates). ds_survey table conveniently organized, include “skip” response surveys, don’t recommend using unless ’re sure potential responses recorded table. ’s safest use observation table. can see detailed description survey ETL : https://support.researchallofus.org/hc/en-us/articles/6085114880148. code start us specific person table join survey dates table incorporate information demographics. leave query, pull data local session:","code":"library(tidyverse)  survey_dates = tbl(con, \"ds_survey\") %>%   filter(survey == \"The Basics\") %>%   group_by(person_id) %>%   filter(survey_datetime == min(survey_datetime)) %>%   distinct(person_id, survey_datetime) demo <- tbl(con, \"cb_search_person\") %>%   filter(age_at_consent >= 40 & age_at_consent <= 120,          has_ehr_data == 1) %>%   distinct(person_id, sex_at_birth, dob)  %>%   inner_join(survey_dates, by = \"person_id\") %>%   select(person_id, sex_at_birth, dob, survey_datetime) demo_collected <- demo %>% collect()"},{"path":"/index.html","id":"bugs","dir":"","previous_headings":"","what":"Bugs","title":"Tools for the AllofUs Resarcher Workbench ","text":"Please leave us comments, requests, report bugs using “Issues” tab github located : https://github.com/roux-ohdsi/allofus/issues.","code":""},{"path":"/reference/CAST.html","id":null,"dir":"Reference","previous_headings":"","what":"Date add function to be passed along to SQL — CAST","title":"Date add function to be passed along to SQL — CAST","text":"Date add function passed along SQL","code":""},{"path":"/reference/CAST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date add function to be passed along to SQL — CAST","text":"","code":"CAST(...)"},{"path":"/reference/CAST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date add function to be passed along to SQL — CAST","text":"... additional arguments passed dbplyr SQL","code":""},{"path":"/reference/CAST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date add function to be passed along to SQL — CAST","text":"Internal, passed along dbplyr SQL.","code":""},{"path":"/reference/DATE_ADD.html","id":null,"dir":"Reference","previous_headings":"","what":"Date add function to be passed along to SQL — DATE_ADD","title":"Date add function to be passed along to SQL — DATE_ADD","text":"Date add function passed along SQL","code":""},{"path":"/reference/DATE_ADD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date add function to be passed along to SQL — DATE_ADD","text":"","code":"DATE_ADD(...)"},{"path":"/reference/DATE_ADD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date add function to be passed along to SQL — DATE_ADD","text":"... additional arguments passed dbplyr SQL","code":""},{"path":"/reference/DATE_ADD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date add function to be passed along to SQL — DATE_ADD","text":"Internal, passed along dbplyr SQL.","code":""},{"path":"/reference/DATE_DIFF.html","id":null,"dir":"Reference","previous_headings":"","what":"Date add function to be passed along to SQL — DATE_DIFF","title":"Date add function to be passed along to SQL — DATE_DIFF","text":"Date add function passed along SQL","code":""},{"path":"/reference/DATE_DIFF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date add function to be passed along to SQL — DATE_DIFF","text":"","code":"DATE_DIFF(...)"},{"path":"/reference/DATE_DIFF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date add function to be passed along to SQL — DATE_DIFF","text":"... additional arguments passed dbplyr SQL","code":""},{"path":"/reference/DATE_DIFF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date add function to be passed along to SQL — DATE_DIFF","text":"Internal, passed along dbplyr SQL.","code":""},{"path":"/reference/STRING_AGG.html","id":null,"dir":"Reference","previous_headings":"","what":"Date add function to be passed along to SQL — STRING_AGG","title":"Date add function to be passed along to SQL — STRING_AGG","text":"Date add function passed along SQL","code":""},{"path":"/reference/STRING_AGG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date add function to be passed along to SQL — STRING_AGG","text":"","code":"STRING_AGG(...)"},{"path":"/reference/STRING_AGG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date add function to be passed along to SQL — STRING_AGG","text":"... additional arguments passed dbplyr SQL","code":""},{"path":"/reference/STRING_AGG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date add function to be passed along to SQL — STRING_AGG","text":"Internal, passed along dbplyr SQL.","code":""},{"path":"/reference/allofus-package.html","id":null,"dir":"Reference","previous_headings":"","what":"allofus: Tools for the AllofUs Resarcher Workbench — allofus-package","title":"allofus: Tools for the AllofUs Resarcher Workbench — allofus-package","text":"Streamlining use 'AllofUs Researcher Workbench' notebooks increasing interoperability OHDSI toolstack.","code":""},{"path":[]},{"path":"/reference/allofus-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"allofus: Tools for the AllofUs Resarcher Workbench — allofus-package","text":"Maintainer: Rob Cavanaugh r.cavanaugh@northeastern.edu [copyright holder] Authors: Louisa Smith l.smith@northeastern.edu [copyright holder]","code":""},{"path":"/reference/aou_atlas_cohort.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a cohort from ATLAS for use in AllofUs — aou_atlas_cohort","title":"Retrieve a cohort from ATLAS for use in AllofUs — aou_atlas_cohort","text":"function retrieves cohort definition ATLAS generates cohort Us. Observation periods first generated subject using aou_observation_period() function. resulting cohort dataframe cohort start end dates subject. function based similar function https://github.com/cmayer2/r4aou tweaks generate appropriate observation periods incorporate package functions.","code":""},{"path":"/reference/aou_atlas_cohort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a cohort from ATLAS for use in AllofUs — aou_atlas_cohort","text":"","code":"aou_atlas_cohort(   cohort_definition,   cohort_sql,   persistence_window = 548,   end_date_buffer = 60,   exclude_aou_visits = FALSE )"},{"path":"/reference/aou_atlas_cohort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a cohort from ATLAS for use in AllofUs — aou_atlas_cohort","text":"cohort_definition cohort definition generated using ROhdsiWebApi::getCohortDefinition(cohort_id, base_url) cohort_sql cohort_sql generated using ROhdsiWebApi::getCohortSql(cohort_definition, base_url) persistence_window Longest allowable time visits observation period. Defaults 548 (see details) end_date_buffer Number days add last observed date. Defaults 60 (see details) exclude_aou_visits Whether exclude Us clinical visits (.e., program-specific measurements, part participants' typical EHR) observation period. Defaults FALSE","code":""},{"path":"/reference/aou_atlas_cohort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a cohort from ATLAS for use in AllofUs — aou_atlas_cohort","text":"dataframe resulting cohort. SQL query used generate cohort stored attribute.","code":""},{"path":"/reference/aou_atlas_cohort.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a cohort from ATLAS for use in AllofUs — aou_atlas_cohort","text":"Follows conventions described : https://ohdsi.github.io/CommonDataModel/ehrObsPeriods.html","code":""},{"path":"/reference/aou_atlas_cohort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a cohort from ATLAS for use in AllofUs — aou_atlas_cohort","text":"","code":"if (FALSE) { # on_workbench() && require(\"ROhdsiWebApi\")  # generate a simple stroke cohort # see https://atlas-demo.ohdsi.org/#/cohortdefinition/1788061 cd <- getCohortDefinition(1788061, \"https://atlas-demo.ohdsi.org/WebAPI\") cd_sql <- getCohortSql(cd, \"https://atlas-demo.ohdsi.org/WebAPI\") cohort <- aou_atlas_cohort(cohort_definition = cd, cohort_sql = cd_sql)  # print query that was executed cat(attr(cohort, \"query\"))   }"},{"path":"/reference/aou_bucket_to_workspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Move files from a bucket to your workspace — aou_bucket_to_workspace","title":"Move files from a bucket to your workspace — aou_bucket_to_workspace","text":"function retrieves file bucket moves workspace can read R, e.g., using function like write.csv(). See https://cloud.google.com/storage/docs/gsutil/commands/cp details underlying function.","code":""},{"path":"/reference/aou_bucket_to_workspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move files from a bucket to your workspace — aou_bucket_to_workspace","text":"","code":"aou_bucket_to_workspace(   file,   dir = \"\",   bucket = getOption(\"aou.default.bucket\") )"},{"path":"/reference/aou_bucket_to_workspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move files from a bucket to your workspace — aou_bucket_to_workspace","text":"file name file bucket, vector multiple files, directory, file pattern (e.g. \".csv\"). dir Optional directory workspace save files . bucket Bucket retrieve file . Defaults getOption(\"aou.default.bucket\"), Sys.getenv('WORKSPACE_BUCKET') unless specified otherwise.","code":""},{"path":"/reference/aou_bucket_to_workspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move files from a bucket to your workspace — aou_bucket_to_workspace","text":"Nothing","code":""},{"path":"/reference/aou_bucket_to_workspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move files from a bucket to your workspace — aou_bucket_to_workspace","text":"","code":"if (FALSE) { aou_bucket_to_workspace(\"data1.csv\") read.csv(\"data1.csv\") # a file to a specific directory in the workspace aou_bucket_to_workspace(\"data2.csv\", dir = \"data\") read.csv(\"data/data2.csv\") # all of the files in this directory aou_bucket_to_workspace(\"data/\") read.csv(\"data/data3.csv\") }"},{"path":"/reference/aou_codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"All of Us Modified Codebook — aou_codebook","title":"All of Us Modified Codebook — aou_codebook","text":"table consists mapped rows publicly available AllofUs Survey Codebook AllofUs PPI Vocabulary available Athena . small number rows match codebook Athena PPI Vocabulary. can also accessed R using allofus::aou_codebook.","code":""},{"path":"/reference/aou_codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All of Us Modified Codebook — aou_codebook","text":"","code":"aou_codebook"},{"path":"/reference/aou_codebook.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All of Us Modified Codebook — aou_codebook","text":"aou_codebook data frame 702 rows 11 columns: concept_code chr; Concept code AOU codebook concept_id int; mapped concept_id PPI vocabulary concept_name chr; Formatted text name concept concept_class_id chr; type survey item - question answer form_name int; name survey field_type chr; type question (radio, text, checkbox etc.) field_label chr; actual text question answer choices int; choices question radio checkbox standard_concept chr; Whether concept_id standard omop concept valid_start_Date chr; start date concept valid_end_Date int; end date concept link chr; link survey pdf","code":""},{"path":"/reference/aou_codebook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"All of Us Modified Codebook — aou_codebook","text":"Questions relating specific conditions included part table. instead available aou_health_history table. AllofUs codebook Code generate table","code":""},{"path":"/reference/aou_concept_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Get occurrences of a concept set from AoU for a given cohort — aou_concept_set","title":"Get occurrences of a concept set from AoU for a given cohort — aou_concept_set","text":"Get occurrences concept set AoU given cohort","code":""},{"path":"/reference/aou_concept_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get occurrences of a concept set from AoU for a given cohort — aou_concept_set","text":"","code":"aou_concept_set(   cohort = NULL,   concepts,   start_date = NULL,   end_date = NULL,   domains = c(\"condition\", \"measurement\", \"observation\", \"procedure\", \"drug\", \"device\",     \"visit\"),   output = \"indicator\",   concept_set_name = \"concept_set\",   min_n = 1,   con = getOption(\"aou.default.con\"),   collect = FALSE,   ... )"},{"path":"/reference/aou_concept_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get occurrences of a concept set from AoU for a given cohort — aou_concept_set","text":"cohort query cohort local dataframe column called \"person_id\", (possibly) columns start_date end_date. provided, defaults entire Us cohort. concepts vector concept ids start_date chr; name start_date column cohort table; defaults NULL pull data across dates end_date chr; name end_date column cohort table; defaults NULL pull data across dates domains chr; vector domains search concepts (\"condition\", \"measurement\", \"observation\", \"procedure\", \"drug\", \"device\", \"visit\"); defaults output one \"indicator\", \"count\", \"\"; want return 1 person matching concepts 0 (\"indicator\"), number matching concepts per person (\"count\"), info matching concepts (\"\"). Defaults \"indicator\" concept_set_name chr; output = \"indicator\" output = \"n\", name column. Defaults \"concept_set\". min_n dbl; output = \"indicator\", minimum number occurrences per person consider indicator true. Defaults 1. con connection allofus SQL database. Defaults getOption(\"aou.default.con\"), set automatically use aou_connect() collect lgl; whether collect database ... arguments passed along ","code":""},{"path":"/reference/aou_concept_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get occurrences of a concept set from AoU for a given cohort — aou_concept_set","text":"dataframe collect = TRUE; remote tbl ","code":""},{"path":"/reference/aou_concept_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get occurrences of a concept set from AoU for a given cohort — aou_concept_set","text":"","code":"if (FALSE) { # indicator for any aspirin at any time aspirin_users <- aou_concept_set(concepts = 1191, concept_set_name = \"aspirin\", domains = \"drug\")  # starting with person table to create a cohort people <- tbl(con, \"person\") %>%   filter(person_id < 2000000) %>%   mutate(     start = as.Date(\"2021-01-01\"),     end = as.Date(\"2023-12-31\")   )  dat <- aou_concept_set(   cohort = people,   concepts = c(725115, 1612146, 1613031),   start_date = \"start\",   end_date = \"end\",   concept_set_name = \"CGM\",   output = \"all\" ) }"},{"path":"/reference/aou_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a connection to the database in All of Us — aou_connect","title":"Create a connection to the database in All of Us — aou_connect","text":"Use function create BigQueryConnection object. can reference object connect Us database run SQL code using, e.g., dbplyr DBI. message printed connection status (successful ).","code":""},{"path":"/reference/aou_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a connection to the database in All of Us — aou_connect","text":"","code":"aou_connect(CDR = getOption(\"aou.default.cdr\"), ...)"},{"path":"/reference/aou_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a connection to the database in All of Us — aou_connect","text":"CDR name \"curated data repository\" connect . Defaults getOption(\"aou.default.cdr\"), Sys.getenv('WORKSPACE_CDR') specified otherwise (.e., \"mainline\" CDR). controlled tier, specify \"base\" CDR CDR = paste0(Sys.getenv('WORKSPACE_CDR'), \"_base\"). ... arguments passed along DBI::dbConnect().","code":""},{"path":"/reference/aou_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a connection to the database in All of Us — aou_connect","text":"BigQueryConnection object. object also saved option (getOption(\"aou.default.con\")).","code":""},{"path":"/reference/aou_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a connection to the database in All of Us — aou_connect","text":"","code":"if (FALSE) { # on_workbench() con <- aou_connect() # reference the observation table in the database dplyr::tbl(con, \"observation\") # print a list of the tables in the database DBI::dbListTables(con) }"},{"path":"/reference/aou_get_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts from a specified domain — aou_get_concepts","title":"Get concepts from a specified domain — aou_get_concepts","text":"Get concepts specified domain","code":""},{"path":"/reference/aou_get_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts from a specified domain — aou_get_concepts","text":"","code":"aou_get_concepts(   ...,   domain = c(\"condition\", \"measurement\", \"observation\", \"procedure\", \"drug\", \"device\") )"},{"path":"/reference/aou_get_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts from a specified domain — aou_get_concepts","text":"... Arguments passed specific `aou_get__concepts()` function domain character string specifying domain retrieve concepts . Must one : \"condition\", \"measurement\", \"observation\", \"procedure\", \"drug\", \"device\"","code":""},{"path":"/reference/aou_get_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts from a specified domain — aou_get_concepts","text":"list concepts specified domain","code":""},{"path":"/reference/aou_get_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get concepts from a specified domain — aou_get_concepts","text":"","code":"aou_get_concepts(cohort, c(123, 456), start_date, end_date, domain = \"condition\") #> Error in aou_get_concepts(cohort, c(123, 456), start_date, end_date, domain = \"condition\"): could not find function \"aou_get_concepts\""},{"path":"/reference/aou_get_condition_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts from the condition table for a given cohort — aou_get_condition_concepts","title":"Get concepts from the condition table for a given cohort — aou_get_condition_concepts","text":"Get concepts condition table given cohort","code":""},{"path":"/reference/aou_get_condition_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts from the condition table for a given cohort — aou_get_condition_concepts","text":"","code":"aou_get_condition_concepts(cohort, concepts, start_date, end_date, ...)"},{"path":"/reference/aou_get_condition_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts from the condition table for a given cohort — aou_get_condition_concepts","text":"cohort cohort object concepts vector concept IDs filter start_date name column start date filtering condition occurrences end_date name column end date filtering condition occurrences ... Additional arguments pass aou_join","code":""},{"path":"/reference/aou_get_condition_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts from the condition table for a given cohort — aou_get_condition_concepts","text":"data frame columns person_id, date, concept_id, concept_name, domain = \"condition\"","code":""},{"path":"/reference/aou_get_condition_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get concepts from the condition table for a given cohort — aou_get_condition_concepts","text":"","code":"aou_get_condition_concepts(cohort, c(123, 456), start_date, end_date) #> Error in aou_get_condition_concepts(cohort, c(123, 456), start_date, end_date): could not find function \"aou_get_condition_concepts\""},{"path":"/reference/aou_get_device_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts from the device exposure table for a given cohort — aou_get_device_concepts","title":"Get concepts from the device exposure table for a given cohort — aou_get_device_concepts","text":"Get concepts device exposure table given cohort","code":""},{"path":"/reference/aou_get_device_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts from the device exposure table for a given cohort — aou_get_device_concepts","text":"","code":"aou_get_device_concepts(cohort, concepts, start_date, end_date, ...)"},{"path":"/reference/aou_get_device_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts from the device exposure table for a given cohort — aou_get_device_concepts","text":"cohort cohort object concepts vector concept IDs filter start_date name column start date filtering devices end_date name column end date filtering devices ... Additional arguments pass aou_join","code":""},{"path":"/reference/aou_get_device_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts from the device exposure table for a given cohort — aou_get_device_concepts","text":"data frame columns person_id, date, concept_id, concept_name, domain = \"device\"","code":""},{"path":"/reference/aou_get_device_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get concepts from the device exposure table for a given cohort — aou_get_device_concepts","text":"","code":"aou_get_device_concepts(cohort, c(123, 456), start_date, end_date) #> Error in aou_get_device_concepts(cohort, c(123, 456), start_date, end_date): could not find function \"aou_get_device_concepts\""},{"path":"/reference/aou_get_drug_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts from the drug exposure table for a given cohort — aou_get_drug_concepts","title":"Get concepts from the drug exposure table for a given cohort — aou_get_drug_concepts","text":"Get concepts drug exposure table given cohort","code":""},{"path":"/reference/aou_get_drug_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts from the drug exposure table for a given cohort — aou_get_drug_concepts","text":"","code":"aou_get_drug_concepts(cohort, concepts, start_date, end_date, ...)"},{"path":"/reference/aou_get_drug_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts from the drug exposure table for a given cohort — aou_get_drug_concepts","text":"cohort cohort object concepts vector concept IDs filter start_date name column start date filtering drugs end_date name column end date filtering drugs ... Additional arguments pass aou_join","code":""},{"path":"/reference/aou_get_drug_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts from the drug exposure table for a given cohort — aou_get_drug_concepts","text":"data frame columns person_id, date, concept_id, concept_name, domain = \"drug\"","code":""},{"path":"/reference/aou_get_drug_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get concepts from the drug exposure table for a given cohort — aou_get_drug_concepts","text":"","code":"aou_get_drug_concepts(cohort, c(123, 456), start_date, end_date) #> Error in aou_get_drug_concepts(cohort, c(123, 456), start_date, end_date): could not find function \"aou_get_drug_concepts\""},{"path":"/reference/aou_get_measurement_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts from the measurement table for a given cohort — aou_get_measurement_concepts","title":"Get concepts from the measurement table for a given cohort — aou_get_measurement_concepts","text":"Get concepts measurement table given cohort","code":""},{"path":"/reference/aou_get_measurement_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts from the measurement table for a given cohort — aou_get_measurement_concepts","text":"","code":"aou_get_measurement_concepts(cohort, concepts, start_date, end_date, ...)"},{"path":"/reference/aou_get_measurement_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts from the measurement table for a given cohort — aou_get_measurement_concepts","text":"cohort cohort object concepts vector concept IDs filter start_date name column start date filtering measurements end_date name column end date filtering measurements ... Additional arguments pass aou_join","code":""},{"path":"/reference/aou_get_measurement_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts from the measurement table for a given cohort — aou_get_measurement_concepts","text":"data frame columns person_id, date, concept_id, concept_name, domain = \"measurement\"","code":""},{"path":"/reference/aou_get_measurement_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get concepts from the measurement table for a given cohort — aou_get_measurement_concepts","text":"","code":"aou_get_measurement_concepts(cohort, c(123, 456), start_date, end_date) #> Error in aou_get_measurement_concepts(cohort, c(123, 456), start_date,     end_date): could not find function \"aou_get_measurement_concepts\""},{"path":"/reference/aou_get_observation_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts from the observation table for a given cohort — aou_get_observation_concepts","title":"Get concepts from the observation table for a given cohort — aou_get_observation_concepts","text":"Get concepts observation table given cohort","code":""},{"path":"/reference/aou_get_observation_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts from the observation table for a given cohort — aou_get_observation_concepts","text":"","code":"aou_get_observation_concepts(cohort, concepts, start_date, end_date, ...)"},{"path":"/reference/aou_get_observation_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts from the observation table for a given cohort — aou_get_observation_concepts","text":"cohort cohort object concepts vector concept IDs filter start_date name column start date filtering observations end_date name column end date filtering observations ... Additional arguments pass aou_join","code":""},{"path":"/reference/aou_get_observation_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts from the observation table for a given cohort — aou_get_observation_concepts","text":"data frame columns person_id, date, concept_id, concept_name, domain = \"observation\"","code":""},{"path":"/reference/aou_get_observation_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get concepts from the observation table for a given cohort — aou_get_observation_concepts","text":"","code":"aou_get_observation_concepts(cohort, c(123, 456), start_date, end_date) #> Error in aou_get_observation_concepts(cohort, c(123, 456), start_date,     end_date): could not find function \"aou_get_observation_concepts\""},{"path":"/reference/aou_get_procedure_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get concepts from the procedure table for a given cohort — aou_get_procedure_concepts","title":"Get concepts from the procedure table for a given cohort — aou_get_procedure_concepts","text":"Get concepts procedure table given cohort","code":""},{"path":"/reference/aou_get_procedure_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get concepts from the procedure table for a given cohort — aou_get_procedure_concepts","text":"","code":"aou_get_procedure_concepts(cohort, concepts, start_date, end_date, ...)"},{"path":"/reference/aou_get_procedure_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get concepts from the procedure table for a given cohort — aou_get_procedure_concepts","text":"cohort cohort object concepts vector concept IDs filter start_date name column start date filtering procedures end_date name column end date filtering procedures ... Additional arguments pass aou_join","code":""},{"path":"/reference/aou_get_procedure_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get concepts from the procedure table for a given cohort — aou_get_procedure_concepts","text":"data frame columns person_id, date, concept_id, concept_name, domain = \"procedure\"","code":""},{"path":"/reference/aou_get_procedure_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get concepts from the procedure table for a given cohort — aou_get_procedure_concepts","text":"","code":"aou_get_procedure_concepts(cohort, c(123, 456), start_date, end_date) #> Error in aou_get_procedure_concepts(cohort, c(123, 456), start_date, end_date): could not find function \"aou_get_procedure_concepts\""},{"path":"/reference/aou_health_history.html","id":null,"dir":"Reference","previous_headings":"","what":"All of Us Health History Codebook — aou_health_history","title":"All of Us Health History Codebook — aou_health_history","text":"table consists rows codebook pertaining health history questions. early Us surveys, questions asked separately respondent respondent's family. current version, questions asked survey. nested nature questions makes challenging deal . can also accessed R using allofus::aou_health_history. Code generate table","code":""},{"path":"/reference/aou_health_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All of Us Health History Codebook — aou_health_history","text":"","code":"aou_health_history"},{"path":"/reference/aou_health_history.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All of Us Health History Codebook — aou_health_history","text":"aou_health_history data frame 1685  rows 9 columns: question chr; Question asked survey relative chr; Person answer pertains condition chr; Formatted text name concept category chr; Type health condition concept_code chr; Concept code AOU codebook concept_id_specific int; Concept id answer concept_id_overall int; Concept id condition overall concept_id_question int; Concept id overarching question form_name chr; Survey name","code":""},{"path":"/reference/aou_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join current query to another table — aou_join","title":"Join current query to another table — aou_join","text":"Simple wrapper join functions join existing query another table Us database.","code":""},{"path":"/reference/aou_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join current query to another table — aou_join","text":"","code":"aou_join(   data,   table,   type,   by,   suffix = c(\"_x\", \"_y\"),   con = getOption(\"aou.default.con\"),   x_as = NULL,   y_as = NULL,   ... )"},{"path":"/reference/aou_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join current query to another table — aou_join","text":"data unexecuted SQL query dbplyr/dplyr. table omop table (remote table schema) wish join type type join. use types available dplyr: left, right, inner, anti, full etc. columns join suffix suffix preferences add joining data column names specified argument. con connection allofus SQL database. Defaults getOption(\"aou.default.con\"), set automatically use aou_connect() x_as optional; string name left table y_as optional; string name right table ... arguments passed join function. e.g., = \"person_id\"","code":""},{"path":"/reference/aou_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join current query to another table — aou_join","text":"Continued dbplyr query","code":""},{"path":"/reference/aou_join.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join current query to another table — aou_join","text":"good reasons use aou_join() possible x_join functions dplyr. First, reduces code necessary join existing table another table. Second, includes checks/workarounds two sources common errors using dbplyr: automatically appends x_as y_as arguments join call provided changes default suffix .x/.y _x/_y cases shared column names specified argument result SQL error.","code":""},{"path":"/reference/aou_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join current query to another table — aou_join","text":"","code":"if (FALSE) { allofus::aou_connect() options(aou.default.con = con) obs_tbl %>%   aou_join(\"person\", type = \"left\", by = \"person_id\") }"},{"path":"/reference/aou_ls_bucket.html","id":null,"dir":"Reference","previous_headings":"","what":"List the current files in your bucket — aou_ls_bucket","title":"List the current files in your bucket — aou_ls_bucket","text":"files stored bucket easily visible notebook. List files bucket files matching certain pattern.","code":""},{"path":"/reference/aou_ls_bucket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the current files in your bucket — aou_ls_bucket","text":"","code":"aou_ls_bucket(   pattern = \"\",   silent = FALSE,   recursive = TRUE,   bucket = getOption(\"aou.default.bucket\"),   gsutil_args = \"\" )"},{"path":"/reference/aou_ls_bucket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the current files in your bucket — aou_ls_bucket","text":"pattern Regular expression, \"*.csv\" single file name e.g., \"mydata.csv\". Default find files apart notebooks (.ipynb files). silent Whether omit names files found. Defaults FALSE. recursive Whether search subdirectories. Defaults TRUE. bucket Bucket retrieve file . Defaults getOption(\"aou.default.bucket\"), Sys.getenv('WORKSPACE_BUCKET') unless specified otherwise. gsutil_args string containing arguments passed gsutil ls. See https://cloud.google.com/storage/docs/gsutil/commands/ls details.","code":""},{"path":"/reference/aou_ls_bucket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the current files in your bucket — aou_ls_bucket","text":"vector file names","code":""},{"path":"/reference/aou_ls_bucket.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the current files in your bucket — aou_ls_bucket","text":"","code":"if (FALSE) { # on_workbench() # list all files, including in subdirectories aou_ls_bucket() # list all csv files aou_ls_bucket(\"*.csv\") # list all csv files in the data directory aou_ls_bucket(\"data/*.csv\") }"},{"path":"/reference/aou_ls_workspace.html","id":null,"dir":"Reference","previous_headings":"","what":"List the current files in your workspace — aou_ls_workspace","title":"List the current files in your workspace — aou_ls_workspace","text":"files stored workspace easily visible notebook. List files workspace (apart notebooks) files matching certain pattern.","code":""},{"path":"/reference/aou_ls_workspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the current files in your workspace — aou_ls_workspace","text":"","code":"aou_ls_workspace(pattern = \"\", silent = FALSE, ...)"},{"path":"/reference/aou_ls_workspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the current files in your workspace — aou_ls_workspace","text":"pattern Regular expression, \"*.csv\" single file name e.g., \"mydata.csv\". Default find files apart notebooks (.ipynb files). silent Whether omit names files found. Defaults FALSE. ... arguments passed list.files()","code":""},{"path":"/reference/aou_ls_workspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List the current files in your workspace — aou_ls_workspace","text":"vector file names","code":""},{"path":"/reference/aou_ls_workspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List the current files in your workspace — aou_ls_workspace","text":"","code":"my_workspace_files <- aou_ls_workspace(silent = TRUE) aou_ls_workspace(\"*.csv\") #> ! No files found with that pattern. aou_ls_workspace(path = \"data\") #> ! No files found with that pattern."},{"path":"/reference/aou_observation_period.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an observation period table based on OMOP Conventions — aou_observation_period","title":"Generate an observation period table based on OMOP Conventions — aou_observation_period","text":"Generate observation period table based OMOP Conventions","code":""},{"path":"/reference/aou_observation_period.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an observation period table based on OMOP Conventions — aou_observation_period","text":"","code":"aou_observation_period(   cohort = NULL,   persistence_window = 548,   end_date_buffer = 60,   exclude_aou_visits = FALSE,   con = getOption(\"aou.default.con\"),   collect = FALSE )"},{"path":"/reference/aou_observation_period.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an observation period table based on OMOP Conventions — aou_observation_period","text":"cohort Query cohort local dataframe column \"person_id\". cohort provided, defaults entire Us cohort persistence_window Longest allowable time visits observation period. Defaults 548 (see details) end_date_buffer Number days add last observed date. Defaults 60 (see details) exclude_aou_visits Whether exclude Us clinical visits (.e., program-specific measurements, part participants' typical EHR) observation period. Defaults FALSE con Connection allofus SQL database. Defaults getOption(\"aou.default.con\"), set automatically use aou_connect() collect Whether collect data keep SQL query observation period. Defaults FALSE.","code":""},{"path":"/reference/aou_observation_period.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an observation period table based on OMOP Conventions — aou_observation_period","text":"sql query local data frame","code":""},{"path":"/reference/aou_observation_period.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate an observation period table based on OMOP Conventions — aou_observation_period","text":"Follows conventions described : https://ohdsi.github.io/CommonDataModel/ehrObsPeriods.html","code":""},{"path":"/reference/aou_observation_period.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an observation period table based on OMOP Conventions — aou_observation_period","text":"","code":"if (FALSE) { # on_workbench() cohort <- dplyr::tbl(con, \"cb_search_person\") %>%   dplyr::filter(has_ehr_data == 1) %>%   head(100) %>%   dplyr::select(person_id)  observation_periods <- aou_observation_period(cohort,   persistence_window = 548,   end_date_buffer = 60,   collect = FALSE ) }"},{"path":"/reference/aou_pull_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"Get occurrences concepts AoU given cohort","code":""},{"path":"/reference/aou_pull_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"","code":"aou_pull_concepts(   cohort,   concepts,   start_date,   end_date,   concept_set_name = \"concepts\",   domains = c(\"condition\", \"measurement\", \"observation\", \"procedure\", \"drug\", \"device\"),   min_n = NULL,   n = FALSE,   keep_all = FALSE,   con = getOption(\"aou.default.con\"),   collect = TRUE,   ... )"},{"path":"/reference/aou_pull_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"cohort tbl; reference table column called \"person_id\", columns start_date end_date concepts num; vector concept ids start_date name start_date column cohort table (unquoted) end_date name end_date column cohort table (unquoted) concept_set_name chr; Name describe concept set, used create indicator variable min_n dbl; minimum number occurrences per person consider indicator true n dbl; count number occurrences per person (include zeros) keep_all lgl; keep columns information concept (e.g., concept name, id, etc.) con connection object AoU collect lgl; whether collect database","code":""},{"path":"/reference/aou_pull_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"dataframe collect = TRUE; remote tbl ","code":""},{"path":"/reference/aou_pull_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"","code":"if (FALSE) { # simple example tobacco <- pull_concepts(cohort, concepts = 1157, start_date = covariate_start_date,  end_date = cohort_start_date, name = \"tobacco\")  # starting with person table people <- tbl(con, \"cb_search_person\") %>% mutate(start_date = as.Date(\"1970-01-01\"),        end_date = as.Date(\"2023-05-24\"))  dat <- aou_pull_concepts(cohort = people,                          concepts = c(725115, 1612146, 1613031),                          start_date = start_date,                          end_date = end_date, concept_set_name = \"CGM\",                          domains = c(\"condition\", \"measurement\", \"observation\", \"procedure\", \"drug\", \"device\"),                          keep_all = TRUE)  }"},{"path":"/reference/aou_pull_survey_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","title":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","text":"Get survey questions AoU given cohort","code":""},{"path":"/reference/aou_pull_survey_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","text":"","code":"aou_pull_survey_concepts(   cohort,   concepts,   collect = TRUE,   reshape = FALSE,   ... )"},{"path":"/reference/aou_pull_survey_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","text":"cohort tbl; reference table column called \"person_id\" concepts num; vector concept ids questions survey table collect lgl; whether collect database reshape lgl; whether turn long data wide data clean variable names","code":""},{"path":"/reference/aou_pull_survey_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","text":"reshape = FALSE, dataframe remote tbl columns person_id, date (survey_datetime),  concept_id (question_concept_id), question, answer. reshape = TRUE, dataframe  questions columns. multiple answers per person (\"checkbox\" questions) list-columns.","code":""},{"path":[]},{"path":"/reference/aou_session_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Print session information for the AoU R environment — aou_session_info","title":"Print session information for the AoU R environment — aou_session_info","text":"purposes reproducibility, important know version R, packages, AoU release using. function prints information console.","code":""},{"path":"/reference/aou_session_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print session information for the AoU R environment — aou_session_info","text":"","code":"aou_session_info(CDR = getOption(\"aou.default.cdr\"))"},{"path":"/reference/aou_session_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print session information for the AoU R environment — aou_session_info","text":"CDR name CDR use. Defaults getOption(\"aou.default.cdr\")","code":""},{"path":"/reference/aou_session_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print session information for the AoU R environment — aou_session_info","text":"list three elements: platform, AoU release, packages","code":""},{"path":"/reference/aou_session_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print session information for the AoU R environment — aou_session_info","text":"","code":"if (FALSE) { # on_workbench() allofus::aou_session_info() }"},{"path":"/reference/aou_sql.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a SQL query on the All of Us database — aou_sql","title":"Execute a SQL query on the All of Us database — aou_sql","text":"Execute SQL query Us database","code":""},{"path":"/reference/aou_sql.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a SQL query on the All of Us database — aou_sql","text":"","code":"aou_sql(query, CDR = getOption(\"aou.default.cdr\"), ...)"},{"path":"/reference/aou_sql.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a SQL query on the All of Us database — aou_sql","text":"query SQL query (BigQuery dialect) executed. Interpreted glue::glue(), expressions enclosed braces evaluated. References \"{CDR}\" \"{cdr}\" evaluated automatically (see examples). CDR name \"curated data repository\" used references form \"{CDR}\" \"{cdr}\" query (see examples). Defaults getOption(\"aou.default.cdr\"), Sys.getenv('WORKSPACE_CDR') specified otherwise (.e., \"mainline\" CDR). controlled tier, specify \"base\" CDR CDR = paste0(Sys.getenv('WORKSPACE_CDR'), \"_base\"). ... arguments passed bigrquery::bq_table_download()","code":""},{"path":"/reference/aou_sql.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a SQL query on the All of Us database — aou_sql","text":"dataframe results query.","code":""},{"path":"/reference/aou_sql.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a SQL query on the All of Us database — aou_sql","text":"","code":"if (FALSE) { # on_workbench() # Examples based on AoU snippets aou_sql(\"   -- Compute the count of unique participants in our All of Us cohort.   SELECT   COUNT(DISTINCT person_id) AS total_number_of_participants   FROM   `{CDR}.person` \")  MEASUREMENT_OF_INTEREST <- \"hemoglobin\" aou_sql(' -- Compute summary information for our measurements of interest for our cohort. -- -- PARAMETERS: --   MEASUREMENT_OF_INTEREST: a case-insensitive string, such as \"hemoglobin\", to be compared --                            to all measurement concept names to identify those of interest  WITH   --   -- Use a case insensitive string to search the measurement concept names of those   -- measurements we do have in the measurements table.   --   labs_of_interest AS (   SELECT     measurement_concept_id,     measurement_concept.concept_name AS measurement_name,     unit_concept_id,     unit_concept.concept_name AS unit_name   FROM     `{CDR}.measurement`   LEFT JOIN `{CDR}.concept` AS measurement_concept   ON measurement_concept.concept_id = measurement_concept_id   LEFT JOIN `{CDR}.concept` AS unit_concept   ON unit_concept.concept_id = unit_concept_id   WHERE     REGEXP_CONTAINS(measurement_concept.concept_name, r\"(?i){MEASUREMENT_OF_INTEREST}\")   GROUP BY     measurement_concept_id,     unit_concept_id,     measurement_concept.concept_name,     unit_concept.concept_name )   --   -- Summarize the information about each measurement concept of interest that our   -- prior query identified.   -- SELECT   measurement_name AS measurement,   IFNULL(unit_name, \"NA\") AS unit,   COUNT(1) AS N,   COUNTIF(value_as_number IS NULL     AND (value_as_concept_id IS NULL       OR value_as_concept_id = 0)) AS missing,   MIN(value_as_number) AS min,   MAX(value_as_number) AS max,   AVG(value_as_number) AS avg,   STDDEV(value_as_number) AS stddev,   APPROX_QUANTILES(value_as_number, 4) AS quantiles,   COUNTIF(value_as_number IS NOT NULL) AS num_numeric_values,   COUNTIF(value_as_concept_id IS NOT NULL       AND value_as_concept_id != 0) AS num_concept_values,   COUNTIF(operator_concept_id IS NOT NULL) AS num_operators,   IF(src_id = \"PPI/PM\", \"PPI\", \"EHR\") AS measurement_source,   measurement_concept_id,   unit_concept_id FROM   `{CDR}.measurement` INNER JOIN  labs_of_interest USING(measurement_concept_id, unit_concept_id) LEFT JOIN   `{CDR}.measurement_ext` USING(measurement_id) GROUP BY   measurement_concept_id,   measurement_name,   measurement_source,   unit_concept_id,   unit_name ORDER BY   N DESC ') }"},{"path":"/reference/aou_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to query allofus observation table for survey responses — aou_survey","title":"Function to query allofus observation table for survey responses — aou_survey","text":"responses survey questions stored ds_survey table include skipped questions (.e., missing data!), function makes easier query observation table responses survey questions skipped responses included. function return dataframe SQL tbl initial cohort table along column question included questions answers person_id cells. column names (questions) can returned concept_code concept_id providing new column names. question, column suffix \"_date\" included date question answered. questions can multiple answers (\"checkbox\"-style questions), answers returned comma-separated string. find desired survey questions, use us data dictionary, survey codebook, athena, data browser, allofus R package modified codebook can found : https://roux-ohdsi.github.io/allofus/articles/searchable_codebook.html questions regarding individual's health history family health history, function requires specific concept_id (concept_code) individual question, whether \"self\" another relative. Responses returned \"Yes\" respondent answered individual condition, \"\" respondent answered individual condition (omitted selecting related conditions), skip response question skipped, NA respondent answer question.","code":""},{"path":"/reference/aou_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to query allofus observation table for survey responses — aou_survey","text":"","code":"aou_survey(   cohort,   questions,   question_output = \"text\",   clean_answers = TRUE,   con = getOption(\"aou.default.con\"),   collect = FALSE )"},{"path":"/reference/aou_survey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to query allofus observation table for survey responses — aou_survey","text":"cohort tbl dataframe cohort includes column called person_id questions either vector concept_ids concept_codes questions return results question_output name columns. Options include text format (\"text\"), concept ids preceded \"x_\" (\"concept_id\"), using custom vector column names matching vector questions. Defaults \"text\". clean_answers whether clean answers survey questions. Defaults TRUE. con connection allofus SQL database. Defaults getOption(\"aou.default.con\"), created automatically aou_connect() collect whether return results local (TRUE) database table","code":""},{"path":"/reference/aou_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to query allofus observation table for survey responses — aou_survey","text":"","code":"if (FALSE) { con <- aou_connect() cohort <- dplyr::tbl(con, \"person\") %>%   dplyr::filter(person_id > 5000000) %>%   dplyr::select(person_id, year_of_birth, gender_concept_id)  aou_survey(   cohort,   questions = c(1585375, 1586135),   question_output = \"text\" ) aou_survey(   cohort,   questions = c(1585811, 1585386),   question_output = c(\"pregnancy\", \"insurance\") ) aou_survey(   cohort,   questions = c(1585375, 1586135, 1740719, 43529932),   question_output = c(\"income\", \"birthplace\", \"grandpa_bowel_obstruction\", \"t2dm\"),   collect = FALSE ) }"},{"path":"/reference/aou_table_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Table of tables, columns, and use for researchers from the CT data dictionary — aou_table_info","title":"Table of tables, columns, and use for researchers from the CT data dictionary — aou_table_info","text":"data frame containing tables columns aou OMOP CDM created https://docs.google.com/spreadsheets/d/1XLVq84LLd0VZMioF2sPwyiaPw3EFp5c8o1CTWGPH-Yc/edit#gid=1815943286. Note column 'value_source_value' manually added missing data dictionary. Code generate table","code":""},{"path":"/reference/aou_table_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table of tables, columns, and use for researchers from the CT data dictionary — aou_table_info","text":"","code":"aou_table_info"},{"path":"/reference/aou_table_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Table of tables, columns, and use for researchers from the CT data dictionary — aou_table_info","text":"aou_table_info table_name chr; name table columns chr; columns table recommended_for_research chr; whether table recomended research","code":""},{"path":"/reference/aou_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"List tables in the AoU Database — aou_tables","title":"List tables in the AoU Database — aou_tables","text":"List tables AoU Database","code":""},{"path":"/reference/aou_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List tables in the AoU Database — aou_tables","text":"","code":"aou_tables(con = getOption(\"aou.default.con\"), remove_na = TRUE)"},{"path":"/reference/aou_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List tables in the AoU Database — aou_tables","text":"con Connection allofus SQL database. Defaults getOption(\"aou.default.con\"), created automatically aou_connect() remove_na Whether remove tables data dictionary. Defaults TRUE","code":""},{"path":"/reference/aou_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List tables in the AoU Database — aou_tables","text":"dataframe table names number columns","code":""},{"path":"/reference/aou_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List tables in the AoU Database — aou_tables","text":"","code":"if (FALSE) { # on_workbench() con <- aou_connect() aou_tables() }"},{"path":"/reference/aou_test_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to test allofus package on fake database — aou_test_connect","title":"Internal function to test allofus package on fake database — aou_test_connect","text":"Internal function test allofus package fake database","code":""},{"path":"/reference/aou_test_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to test allofus package on fake database — aou_test_connect","text":"","code":"aou_test_connect(   cache = TRUE,   cache_dir = Sys.getenv(\"AOU_CACHE_DIR\"),   overwrite = FALSE )"},{"path":"/reference/aou_test_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to test allofus package on fake database — aou_test_connect","text":"cache logical indicating whether cache downloaded data cache_dir character string specifying directory store cached data overwrite logical indicating whether overwrite existing cached data","code":""},{"path":"/reference/aou_test_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to test allofus package on fake database — aou_test_connect","text":"database connection object","code":""},{"path":"/reference/aou_test_connect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal function to test allofus package on fake database — aou_test_connect","text":"function downloads test OMOP database OHDSI Eunomia package, renames tables fields lowercase, removes tables relevant Us, adds missing fields relevant tables, drops fields relevant Us. tests connection database checking person_id column person table.","code":""},{"path":"/reference/aou_test_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function to test allofus package on fake database — aou_test_connect","text":"","code":"if (FALSE) { con <- aou_test_connect() }"},{"path":"/reference/aou_workspace_to_bucket.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a file from your workspace to your bucket — aou_workspace_to_bucket","title":"Save a file from your workspace to your bucket — aou_workspace_to_bucket","text":"function moves file saved workspace bucket, can retrieved even environment deleted. use, first save desired object file workspace (e.g., write.csv(object, \"filename.csv\")) run function (e.g., aou_workspace_to_bucket(files = \"filename.csv\")). See https://cloud.google.com/storage/docs/gsutil/commands/cp details underlying function.","code":""},{"path":"/reference/aou_workspace_to_bucket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a file from your workspace to your bucket — aou_workspace_to_bucket","text":"","code":"aou_workspace_to_bucket(   file,   dir = \"\",   recursive = TRUE,   bucket = getOption(\"aou.default.bucket\") )"},{"path":"/reference/aou_workspace_to_bucket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a file from your workspace to your bucket — aou_workspace_to_bucket","text":"file name file bucket, vector multiple files, directory, file pattern (e.g. \".csv\"). See Details. dir Optional directory bucket save files . recursive Whether include subdirectories. Defaults TRUE. bucket Bucket save files . Defaults getOption(\"aou.default.bucket\"), Sys.getenv('WORKSPACE_BUCKET') unless specified otherwise.","code":""},{"path":"/reference/aou_workspace_to_bucket.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a file from your workspace to your bucket — aou_workspace_to_bucket","text":"","code":"if (FALSE) { aou_workspace_to_bucket(\"data1.csv\") # a file to a specific directory in the bucket aou_workspace_to_bucket(\"data2.csv\", dir = \"data\") # all of the files in this directory aou_workspace_to_bucket(\"data/\") # multiple specific files aou_workspace_to_bucket(c(\"data1.csv\", \"data2.csv\")) }"},{"path":"/reference/bookstore.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Install and Load R Packages — bookstore","title":"Function to Install and Load R Packages — bookstore","text":"Function Install Load R Packages","code":""},{"path":"/reference/bookstore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Install and Load R Packages — bookstore","text":"","code":"bookstore(package_names, quietly = TRUE)"},{"path":"/reference/bookstore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Install and Load R Packages — bookstore","text":"package_names character vector package names CRAN github description bookstore() function check see packages provided already installed local machine. installed, look package CRAN install found. find package CRAN, 'll ask owner/repository_name github install package github. input provided without quotes. example, respond roux-ohdsi/ohdsilab \"roux-ohdsi/ohdsilab\".","code":""},{"path":"/reference/bookstore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to Install and Load R Packages — bookstore","text":"","code":"if (FALSE) { bookstore(c(\"aouFI\", \"CohortGenerator\", \"tidyr\")) }"},{"path":"/reference/get_domain_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves domain concepts for a given cohort and time range — get_domain_concepts","title":"Retrieves domain concepts for a given cohort and time range — get_domain_concepts","text":"Retrieves domain concepts given cohort time range","code":""},{"path":"/reference/get_domain_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves domain concepts for a given cohort and time range — get_domain_concepts","text":"","code":"get_domain_concepts(   cohort,   concepts,   start_date,   end_date,   tbl_name,   date_column,   concept_id_column,   ... )"},{"path":"/reference/get_domain_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves domain concepts for a given cohort and time range — get_domain_concepts","text":"cohort data frame containing person IDs concepts vector concept IDs retrieve start_date start date time range retrieve concepts end_date end date time range retrieve concepts tbl_name name table containing domain concepts date_column name column containing concept dates concept_id_column name column containing concept IDs ... Additional arguments","code":""},{"path":"/reference/health_history_codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"All of Us Health History Codebook — health_history_codebook","title":"All of Us Health History Codebook — health_history_codebook","text":"table consists rows codebook pertaining health history questions. early Us surveys, questions asked separately respondent respondent's family. current version, questions asked survey. nested nature questions makes challenging deal . can also accessed R using `allofus::aou_health_history`. Code generate table","code":""},{"path":"/reference/health_history_codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All of Us Health History Codebook — health_history_codebook","text":"","code":"aou_health_history"},{"path":"/reference/health_history_codebook.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"All of Us Health History Codebook — health_history_codebook","text":"`aou_health_history` data frame 1685  rows 9 columns: question chr; Question asked survey relative chr; Person answer pertains condition chr; Formatted text name concept category chr; Type health condition concept_code chr; Concept code AOU codebook concept_id_specific int; Concept id answer concept_id_overall int; Concept id condition overall concept_id_question int; Concept id overarching question form_name chr; Survey name","code":""},{"path":"/reference/omop_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join current query to another omop table — omop_join","title":"Join current query to another omop table — omop_join","text":"Simple wrapper join functions join existing query another table omop cdm (source).","code":""},{"path":"/reference/omop_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join current query to another omop table — omop_join","text":"","code":"omop_join(   data,   table,   type,   by,   suffix = c(\"_x\", \"_y\"),   con = getOption(\"aou.default.con\"),   x_as = NULL,   y_as = NULL,   ... )"},{"path":"/reference/omop_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join current query to another omop table — omop_join","text":"data sql query dbplyr/dplyr. table omop table (table schema) wish join type type join. use types available dplyr: left, right, inner, anti, full etc. con defaults connection set options() x_as optional; string name left table y_as optional; string name right table ... arguments passed join function. e.g., = \"person_id\"","code":""},{"path":"/reference/omop_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join current query to another omop table — omop_join","text":"Continued dplyr query","code":""},{"path":"/reference/omop_join.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join current query to another omop table — omop_join","text":"Include following line top script setting connection con refers connection object R. options(aou.default.con = con) good reasons use omop_join() possible x_join functions dplyr. First, reduces code necessary join existing table another table. Second, includes checks/workarounds two sources common errors using dplyr DatabaseConnector: automatically appends x_as y_as arguments join call provided changes default suffix .x/.y _x/_y cases shared column names specified argument result sql error.","code":""},{"path":"/reference/omop_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join current query to another omop table — omop_join","text":"","code":"allofus::aou_connect() #> Error: Unable to connect #> <BigQueryConnection> #>   Dataset: NA.NA #>   Billing:  options(aou.default.con = con) #> Error in options(aou.default.con = con): object 'con' not found obs_tbl |>   omop_join(\"person\", type = \"left\", by = \"person_id\") #> Error in tbl(con, table): could not find function \"tbl\""},{"path":"/reference/on_workbench.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see whether you are on the All of Us workbench — on_workbench","title":"Check to see whether you are on the All of Us workbench — on_workbench","text":"Use function check whether Us Researcher Workbench. useful writing code can used workbench locally.","code":""},{"path":"/reference/on_workbench.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see whether you are on the All of Us workbench — on_workbench","text":"","code":"on_workbench()"},{"path":"/reference/on_workbench.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check to see whether you are on the All of Us workbench — on_workbench","text":"TRUE workbench, FALSE otherwise","code":""},{"path":"/reference/on_workbench.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check to see whether you are on the All of Us workbench — on_workbench","text":"","code":"on_workbench() #> [1] FALSE"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pipe operator — %>%","text":"","code":"1:10 %>% sum #> [1] 55"}]
